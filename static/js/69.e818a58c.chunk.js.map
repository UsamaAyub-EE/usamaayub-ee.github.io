{"version":3,"file":"static/js/69.e818a58c.chunk.js","mappings":"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","sources":["components/Projects.jsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Badge.js","components/projects/ProjectCard.jsx","components/Header.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { ThemeContext } from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport Header from \"./Header\";\nimport ProjectCard from \"./projects/ProjectCard\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport projects from \"../constants/projects.json\";\nimport particlesOptions from \"../particles.json\";\nimport Particles, {initParticlesEngine} from \"@tsparticles/react\";\nimport {loadFull} from \"tsparticles\";\n\nconst styles = {\n  rowStyle: {\n    justifyContent: \"center\",\n  },\n  showMoreStyle: {\n    margin: 25,\n  },\n};\n\nconst Projects = (props) => {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [showMore, setShowMore] = useState(false);\n  const [init, setInit] = useState(false);\n\n  useEffect(() => {\n    setData(projects);\n    if (init) {\n      return;\n    }\n    initParticlesEngine(async (engine) => {\n      await loadFull(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, [init]);\n  const numberOfItems = showMore && data ? data.length : 6;\n  return (\n    <div>\n      {init && <Particles options={particlesOptions}/>}\n      <Header title={header} />\n      {data ? (\n        <div>\n          <div className=\"projects-container\">\n            {data.projects?.slice(0, numberOfItems).map((project) => (\n              <Fade key={project.title}>\n                <ProjectCard project={project} />\n              </Fade>\n            ))}\n          </div>\n          <div>\n            {!showMore && (\n              <Button\n                style={styles.showMoreStyle}\n                variant={theme.bsSecondaryVariant}\n                onClick={() => setShowMore(true)}\n              >\n                show more\n              </Button>\n            )}\n          </div>\n        </div>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </div>\n  );\n};\n\nProjects.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Projects;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import React, { useContext } from \"react\";\nimport { Button, Badge, Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { ThemeContext } from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: \"left\",\n  },\n  linkStyle: {\n    textDecoration: \"none\",\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n\n  const { project } = props;\n\n  return (\n    <div>\n      <Card\n        style={{\n          borderRadius: 10,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n          borderWidth: 3,\n          width: 350,\n          marginLeft: 100,\n          marginRight: 100,\n          marginBottom: 50,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        {project?.image && (\n          <Card.Img\n            variant=\"top\"\n            src={project?.image}\n            style={{ height: 200 }}\n          />\n        )}\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle} as=\"div\">\n            <ReactMarkdown>{project.bodyText}</ReactMarkdown>\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={\"outline-\" + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, \"_blank\")}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string.isRequired,\n        href: PropTypes.string.isRequired,\n      })\n    ),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../index.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n"],"names":["styles","rowStyle","justifyContent","showMoreStyle","margin","props","_data$projects","theme","useContext","ThemeContext","header","data","setData","useState","showMore","setShowMore","init","setInit","useEffect","projects","initParticlesEngine","async","loadFull","engine","then","numberOfItems","length","_jsxs","children","_jsx","Particles","options","particlesOptions","Header","title","className","slice","map","project","Fade","ProjectCard","Button","style","variant","bsSecondaryVariant","onClick","FallbackSpinner","React","_ref","ref","as","bsPrefix","size","active","disabled","prefix","useBootstrapPrefix","buttonProps","tagName","useButtonProps","Component","classNames","href","displayName","CardBody","CardFooter","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","CardImg","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Footer","ImgOverlay","Badge","pill","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","_project$links","borderRadius","backgroundColor","cardBackground","borderColor","cardBorderColor","borderWidth","width","marginLeft","marginRight","marginBottom","image","src","height","ReactMarkdown","bodyText","links","link","window","open","tags","cardFooterBackground","tag","bsPrimaryVariant"],"sourceRoot":""}